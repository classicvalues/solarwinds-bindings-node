name: Review - Group Build & Test (on pull)

on: 
  pull_request: 

  workflow_dispatch:

jobs:
  build:
    name: Build for all supported Node versions
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: ['14', '16', '18']
    
    steps:
      - name: Checkout ${{ github.ref }}
        uses: actions/checkout@v3

      - name: Setup Node ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'

      - name: Cache zig-build
        uses: actions/cache@v3
        with:
          path: |
            ~/.zig-build
            ~/.cache/zig
          key: zig-build-${{ matrix.node }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            zig-build-${{ matrix.node }}-

      - name: Show Environment Info
        run: |
          printenv
          node --version
          npm --version
          cat /etc/os-release

      - name: NPM Install dependencies
        run: npm install

      # runs: node build.js for the current node version
      - name: Build from source for Node ${{ matrix.node }}
        run: npm run build

      - name: Upload built packages
        uses: actions/upload-artifact@v3
        with:
          name: npm-${{ matrix.node }}
          path: npm/*
          retention-days: 1

  load-x64-group:
    name: Load x64 Group Config JSON
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:
      - name: Checkout ${{ github.ref }}
        uses: actions/checkout@v3

      - name: Load x64 group data
        id: set-matrix
        run: .github/scripts/matrix-from-json.sh .github/config/x64-group.json

  x64-group-test:
    name: x64 Group Test
    runs-on: ubuntu-latest
    needs: [load-x64-group, build]
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.load-x64-group.outputs.matrix) }}
    container:
      image: ${{ matrix.image }}

    env:
      SW_APM_SERVICE_KEY: ${{ secrets.SW_APM_SERVICE_KEY }}
      SW_APM_COLLECTOR: ${{ secrets.SW_APM_COLLECTOR }}
      SW_TEST_PROD_SERVICE_KEY: ${{ secrets.SW_TEST_PROD_SERVICE_KEY }}

    steps:
      # the working directory is created by the runner and mounted to the container.
      # container user is root and the runner is not a user in the container.
      # this is a github actions design flaw.
      # when npm 7 is run as root, scripts are always run with the effective uid and gid of the working directory owner.
      # node 16 can't install under default setup.
      # specifying workdir for container and path for checkout does not work due to bug.
      - name: Change Owner of Container Working Directory
        run: chown root:root .
        if: ${{ contains(matrix.image, 'ghcr.io/solarwindscloud/solarwinds-bindings-node/node') }}

      - name: Checkout ${{ github.ref }}
        uses: actions/checkout@v3

      - name: Show Environment Info
        run: |
          printenv
          node --version
          npm --version 
          cat /etc/os-release

      # Download all prebuilt packages
      - name: Download Node 14 packages
        uses: actions/download-artifact@v3
        with:
          name: npm-14
          path: npm/
      - name: Download Node 16 packages
        uses: actions/download-artifact@v3
        with:
          name: npm-16
          path: npm/
      - name: Download Node 18 packages
        uses: actions/download-artifact@v3
        with:
          name: npm-18
          path: npm/

      - name: NPM Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

  arm64-launch:
    name: Launch arm64 test runners
    runs-on: ubuntu-latest
    needs: build
    outputs:
      matrix: ${{ steps.launch.outputs.matrix }}
    steps:
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.CI_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.CI_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - id: launch
        uses: solarwindscloud/ec2-runner-action@master
        with:
          action: launch
          github-token: ${{ secrets.GITHUB_TOKEN }}
          matrix: |
            node:18
            node:18-alpine
          runner-user: github
          runner-directory: /gh
          instance-type: t4g.medium
          ami-name: gha-arm64-ubuntu22-.*
          ami-owner: "858939916050"
          subnet-id: subnet-0fd499f8a50e41807
          security-group-ids: sg-0fd8d8cd6effda4a5

  arm64-test:
    name: ARMv8 Test
    runs-on: ${{ fromJSON(needs.arm64-launch.outputs.matrix)[matrix.image].label }}
    needs: [arm64-launch, build]
    strategy:
      matrix:
        image: ["node:18", "node:18-alpine"]
      fail-fast: false
    container:
      image: ${{ matrix.image }}

    env:
      SW_APM_SERVICE_KEY: ${{ secrets.SW_APM_SERVICE_KEY }}
      SW_APM_COLLECTOR: ${{ secrets.SW_APM_COLLECTOR }}
      SW_TEST_PROD_SERVICE_KEY: ${{ secrets.SW_TEST_PROD_SERVICE_KEY }}

    steps:
      - name: Checkout ${{ github.ref }}
        uses: actions/checkout@v3

      - name: Show Environment Info
        run: |
          printenv
          node --version
          npm --version 
          cat /etc/os-release

      - name: Download Node 18 packages
        uses: actions/download-artifact@v3
        with:
          name: npm-18
          path: npm/

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2

      - name: NPM Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

  arm64-terminate:
    name: Terminate arm64 test runners
    runs-on: ubuntu-latest
    needs: [arm64-launch, arm64-test]
    steps:
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.CI_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.CI_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - uses: solarwindscloud/ec2-runner-action@master
        with:
          action: terminate
          github-token: ${{ secrets.GITHUB_TOKEN }}
          matrix: ${{ needs.arm64-launch.outputs.matrix }}

  checksum:
    name: Checksum Liboboe
    runs-on: ubuntu-latest

    steps:
      - name: Checkout ${{ github.ref }}
        uses: actions/checkout@v3

      - name: Checksum Liboboe
        run: .github/scripts/liboboe-checksum.sh "liboboe-1.0-x86_64.so liboboe-1.0-alpine-x86_64.so liboboe-1.0-aarch64.so liboboe-1.0-alpine-aarch64.so"
